@model DIUB.Models.Tbl_AttandanceMid

@{
                /**/

                /**/

                ViewBag.Title = "Attandance";
                Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Attandance</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container-fluid">
        <div class="row">
            <div class="col-xs-12">
                <table id="grid"></table>
            </div>
        </div>
    </div>
    <script type="text/javascript">
        $(document).ready(function () {
            var grid, countries;
            grid = $('#grid').grid({
                dataSource: '/Players/Get',
                uiLibrary: 'bootstrap4',
                primaryKey: 'AttandanceID',
                inlineEditing: { mode: 'command' },
                columns: [
                    { field: 'StudentID', width: 44 },
                    { field: 'StudentName', width: 44 },
                    { field: 'DateOfBirth', type: 'date', editor: true },
                    { field: 'Day1', title: 'Active?', type: 'checkbox', editor: true, width: 90, align: 'center' }
                    { field: 'Day2', title: 'Active?', type: 'checkbox', editor: true, width: 90, align: 'center' }
                    { field: 'Day3', title: 'Active?', type: 'checkbox', editor: true, width: 90, align: 'center' }
                    { field: 'Day4', title: 'Active?', type: 'checkbox', editor: true, width: 90, align: 'center' }
                    { field: 'Day5', title: 'Active?', type: 'checkbox', editor: true, width: 90, align: 'center' }
                    { field: 'Day6', title: 'Active?', type: 'checkbox', editor: true, width: 90, align: 'center' }
                    { field: 'Day7', title: 'Active?', type: 'checkbox', editor: true, width: 90, align: 'center' }
                    { field: 'Day8', title: 'Active?', type: 'checkbox', editor: true, width: 90, align: 'center' }
                    { field: 'Day9', title: 'Active?', type: 'checkbox', editor: true, width: 90, align: 'center' }
                    { field: 'Day10', title: 'Active?', type: 'checkbox', editor: true, width: 90, align: 'center' }
                    { field: 'Day11', title: 'Active?', type: 'checkbox', editor: true, width: 90, align: 'center' }
                    { field: 'Day12', title: 'Active?', type: 'checkbox', editor: true, width: 90, align: 'center' }
                ],
                pager: { limit: 30 }
            });
            grid.on('rowDataChanged', function (e, id, record) {
                // Clone the record in new object where you can format the data to format that is supported by the backend.
                var data = $.extend(true, {}, record);
                // Format the date to format that is supported by the backend.
                data.DateOfBirth = gj.core.parseDate(record.DateOfBirth, 'mm/dd/yyyy').toISOString();
                // Post the data to the server
                $.ajax({ url: '/Players/Save', data: { record: data }, method: 'POST' })
                    .fail(function () {
                        alert('Failed to save.');
                    });
            });
            grid.on('rowRemoving', function (e, $row, id, record) {
                if (confirm('Are you sure?')) {
                    $.ajax({ url: '/Players/Delete', data: { id: id }, method: 'POST' })
                        .done(function () {
                            grid.reload();
                        })
                        .fail(function () {
                            alert('Failed to delete.');
                        });
                }
            });
        });
    </script>




    <div class="form-horizontal">
        <h4>Tbl_AttandanceMid</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.AttandanceID)

        <div class="form-group">
            @Html.LabelFor(model => model.TeacherID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TeacherID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TeacherID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TeacherName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TeacherName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TeacherName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StudentID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StudentID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StudentID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StudentName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StudentName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StudentName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SectionID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SectionID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SectionID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SectionName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SectionName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SectionName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SubjectID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SubjectID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SubjectID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Day1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Day1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Day1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Day2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Day2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Day2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Day3, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Day3, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Day3, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Day4, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Day4, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Day4, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Day5, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Day5, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Day5, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Day6, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Day6, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Day6, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Day7, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Day7, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Day7, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Day8, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Day8, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Day8, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Day9, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Day9, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Day9, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Day10, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Day10, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Day10, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Day11, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Day11, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Day11, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Day12, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Day12, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Day12, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TotalAttandanceMid, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TotalAttandanceMid, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TotalAttandanceMid, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SemesterID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SemesterID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SemesterID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
